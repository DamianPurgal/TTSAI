openapi: 3.0.0
info:
  version: 1.0.0
  title: TTSAI
tags:
  - name: "Voice"
  - name: "Request"
  - name: "Alert"
servers:
  - url: "http://localhost:8080"
    description: "Local server"
paths:
  /voices:
    get:
      summary: Get all avaliable voices
      tags:
        - "Voice"
      operationId: getAllVoices
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Voice'
  /voices/refresh:
    get:
      summary: Refresh and get voices
      tags:
        - "Voice"
      operationId: refreshAndGetVoices
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Voice'

  /requests:
    get:
      summary: Get all requests
      tags:
        - "Request"
      operationId: getRequestsPageable
      parameters:
        - name: requestDto
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/RequestPageable'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestPage'
    post:
      summary: Add request
      tags:
        - "Request"
      operationId: addRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
    delete:
      summary: Delete all requests
      tags:
        - "Request"
      operationId: deleteAllRequests
      responses:
        "200":
          description: "OK"
  /requests/{requestId}:
    delete:
      summary: Delete request by id
      tags:
        - "Request"
      operationId: deleteRequestById
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: "OK"
  /requests/{requestId}/status:
    put:
      summary: Change request status
      tags:
        - "Request"
      operationId: updateRequestStatus
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: true
          description: Request status
          schema:
            type: string
            enum:
              - NEW
              - DENIED
              - ACCEPTED
              - AUTO_DENIED
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request'
  /alerts:
    get:
      summary: Get all alerts
      tags:
        - "Alert"
      operationId: getAlertsPageable
      parameters:
        - name: requestDto
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/RequestPageable'
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertPage'
  /alerts/{alertId}:
    get:
      summary: Get alert by id
      tags:
        - "Alert"
      operationId: getAlertById
      parameters:
        - name: alertId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'
  /alerts/latest:
    get:
      summary: Get latest not displayed alert
      tags:
        - "Alert"
      operationId: getAlertLatest
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Alert'

components:
  schemas:
    Voice:
      description: AI Voice
      type: object
      properties:
        voiceId:
          description: id of voice
          type: string
          example: "31kmadlkjmMM241adwa2"
        name:
          description: name of voice
          type: string
          example: "name"
        category:
          description: category of voice
          type: string
          example: "premade"
    RequestPageable:
      description: Pageable request
      type: object
      properties:
        page:
          description: page
          type: integer
          format: int32
          example: 0
        size:
          description: size
          type: integer
          format: int32
          example: 10
    Request:
      description: TTS request
      type: object
      properties:
        id:
          description: id
          type: integer
          format: int64
          example: 123
        requester:
          description: Requester of TTS
          type: string
          example: "RequesterUsername"
        submitter:
          description: submitter
          type: string
          example: "SubmitterUsername"
        RequestStatus:
          description: Request status
          type: string
          enum:
            - NEW
            - DENIED
            - ACCEPTED
            - AUTO_DENIED
            - TTS_ERROR
            - AUTO_ACCEPTED
        dateOfCreation:
          type: string
          format: date-time
          description: Creation date and time
          example: "2021-01-30T08:30:00Z"
        conversation:
          description: conversation
          type: array
          items:
            $ref: "#/components/schemas/Conversation"
    RequestPage:
      description: Request page
      type: object
      required:
        - totalNumberOfPages
        - totalNumberOfElements
        - requests
      properties:
        totalNumberOfPages:
          description: Total number of pages
          type: integer
          format: int32
          example: 123
        totalNumberOfElements:
          description: Total number of pages
          type: integer
          format: int32
          example: 123
        requests:
          description: Retrieved requests
          type: array
          items:
            $ref: "#/components/schemas/Request"
    Alert:
      description: Alert
      type: object
      properties:
        id:
          description: id
          type: integer
          format: int64
          example: 123
        requester:
          description: Requester of TTS
          type: string
          example: "RequesterUsername"
        submitter:
          description: submitter
          type: string
          example: "SubmitterUsername"
        alertStatus:
          description: Alert status
          type: string
          enum:
            - NEW
            - READY_TO_DISPLAY
            - DISPLAYED
        dateOfCreation:
          type: string
          format: date-time
          description: Creation date and time
          example: "2021-01-30T08:30:00Z"
        conversation:
          description: conversation
          type: array
          items:
            $ref: "#/components/schemas/Conversation"
        events:
          description: Alert events
          type: array
          items:
            $ref: "#/components/schemas/AlertEvent"
    AlertEvent:
      description: Audio message
      type: object
      properties:
        orderIndex:
          description: id
          type: integer
          format: int64
          example: 123
        audioFile:
          type: string
          format: byte
          description: audio file
        fileType:
          type: string
          description: format of audio file
          example: "mp3"
        voiceType:
          description: Voice type
          type: string
          example: "Adam"
    AlertPage:
      description: Alert page
      type: object
      required:
        - totalNumberOfPages
        - totalNumberOfElements
        - alerts
      properties:
        totalNumberOfPages:
          description: Total number of pages
          type: integer
          format: int32
          example: 123
        totalNumberOfElements:
          description: Total number of pages
          type: integer
          format: int32
          example: 123
        requests:
          description: Retrieved alerts
          type: array
          items:
            $ref: "#/components/schemas/Alert"
    Conversation:
      description: Conversation
      type: object
      properties:
        orderIndex:
          description: id
          type: integer
          format: int64
          example: 123
        message:
          description: TTS text message
          type: string
          example: "test"
        voiceType:
          description: Voice type
          type: string
          example: "Adam"